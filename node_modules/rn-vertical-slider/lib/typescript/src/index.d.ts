import * as React from 'react';
import { Animated, PanResponderInstance } from 'react-native';
interface props {
    value?: number;
    disabled?: boolean;
    min: number;
    max: number;
    onChange: (value: number) => void;
    onComplete?: (value: number) => void;
    width: number;
    height: number;
    borderRadius?: number;
    maximumTrackTintColor?: string;
    minimumTrackTintColor?: string;
    showBallIndicator?: boolean;
    step?: number;
    ballIndicatorColor?: string;
    ballIndicatorWidth?: number;
    ballIndicatorHeight?: number;
    ballIndicatorPosition?: number;
    ballIndicatorTextColor?: string;
    animationDuration?: number;
    showBackgroundShadow?: boolean;
    shadowProps?: {
        shadowOffsetWidth?: number;
        shadowOffsetHeight?: number;
        shadowOpacity?: number;
        shadowRadius?: number;
        elevation?: number;
        shadowColor?: string;
    };
    renderIndicator?: (value: number) => JSX.Element;
}
interface state {
    value: number;
    sliderHeight: Animated.Value;
    ballHeight: Animated.Value;
    panResponder: PanResponderInstance;
}
export default class VerticalSlider extends React.Component<props, state> {
    _moveStartValue: number;
    constructor(props: props);
    _fetchNewValueFromGesture: (gestureState: any) => number;
    _getSliderHeight: (value: number) => number;
    _changeState: (value: number) => void;
    componentDidMount(): void;
    shouldComponentUpdate(nextProps: props, nextState: state): boolean;
    render(): JSX.Element;
}
export {};
