{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { styles } from \"./styleSheets.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginPage = function LoginPage(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var onEChange = function onEChange(textValue) {\n    return setEmail(textValue);\n  };\n\n  var onPChange = function onPChange(textValue) {\n    return setPassword(textValue);\n  };\n\n  var isStatus = 404;\n\n  var setSend = function setSend() {\n    axios({\n      method: \"POST\",\n      url: \"http://127.0.0.1:8000/USER/login/\",\n      headers: {\n        'Authorization': \"7a5b55841e8ad94f989a789ef4d23e5809ce0c48\"\n      },\n      data: {\n        email: email,\n        password: password\n      }\n    }).then(function (response) {\n      if (response.status == \"200\") {\n        props.navigation.navigate(\"OpenProject\");\n        console.log(response.status);\n      }\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n\n  return _jsx(View, {\n    style: styles.page,\n    children: _jsxs(View, {\n      style: styles.box,\n      children: [_jsx(View, {\n        children: _jsx(Image, {\n          source: require(\"../assets/app_ui2-12.png\"),\n          style: styles.logo,\n          resizeMode: \"cover\"\n        })\n      }), _jsx(View, {\n        style: styles.fields,\n        children: _jsx(TextInput, {\n          placeholder: \"Type your email address  \",\n          style: styles.text,\n          onChangeText: onEChange\n        })\n      }), _jsx(View, {\n        style: [styles.fields, {\n          marginTop: 10\n        }],\n        children: _jsx(TextInput, {\n          secureTextEntry: true,\n          placeholder: \"password\",\n          style: styles.text,\n          onChangeText: onPChange\n        })\n      }), _jsxs(View, {\n        style: styles.butbox,\n        children: [_jsx(View, {\n          children: _jsx(TouchableOpacity, {\n            style: styles.Button,\n            onPress: setSend,\n            children: _jsx(Text, {\n              style: styles.ButtonText,\n              children: \"   Login       \"\n            })\n          })\n        }), _jsx(View, {\n          children: _jsx(TouchableOpacity, {\n            style: [{\n              backgroundColor: 'transparent'\n            }],\n            onPress: setSend,\n            children: _jsx(Text, {\n              style: styles.ButtonText,\n              onPress: function onPress() {\n                return props.navigation.navigate(\"ForgetPass\");\n              },\n              children: \"Forgot Password\"\n            })\n          })\n        })]\n      })]\n    })\n  });\n};\n\nexport default LoginPage;","map":{"version":3,"names":["React","useState","axios","styles","LoginPage","props","email","setEmail","password","setPassword","onEChange","textValue","onPChange","isStatus","setSend","method","url","headers","data","then","response","status","navigation","navigate","console","log","catch","error","page","box","require","logo","fields","text","marginTop","butbox","Button","ButtonText","backgroundColor"],"sources":["E:/Hoogaman/E-novation-Front-End/Pages/Login.js"],"sourcesContent":["import React,{ useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\nimport {Text, View, TextInput ,TouchableOpacity,Image} from 'react-native';\r\n\r\nimport {styles} from './styleSheets.js'\r\n\r\n\r\n\r\nconst LoginPage = props =>{\r\n  // const [email, setEmail] = useState(\"\");\r\n  \r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const onEChange = (textValue) => setEmail(textValue);\r\n  const onPChange = (textValue) => setPassword(textValue);\r\n  const isStatus = 404;\r\n  const setSend = () => {\r\n    axios({\r\n      method: \"POST\",\r\n      url: \"http://127.0.0.1:8000/USER/login/\",\r\n      headers: {\r\n          // 'Content-Type': \"application/json\",\r\n          'Authorization':  \"7a5b55841e8ad94f989a789ef4d23e5809ce0c48\",\r\n          // 'Accept': 'application/json'\r\n      },\r\n      data: {\r\n        email: email,\r\n        password: password,\r\n      },\r\n      \r\n    })\r\n      // .then((response) => console.log(response.status))\r\n      .then((response) => {if(response.status ==\"200\"){\r\n      props.navigation.navigate(\"OpenProject\");\r\n      console.log(response.status);\r\n      }})\r\n      \r\n      \r\n      .catch((error) => console.log(error));\r\n\r\n  };\r\n  return(\r\n    <View style={styles.page}>\r\n      <View style={styles.box}>\r\n        <View>\r\n            <Image source={require('../assets/app_ui2-12.png')} style={styles.logo}\r\n                  resizeMode= 'cover'/>\r\n        </View>\r\n        <View style={styles.fields}> \r\n            <TextInput placeholder=\"Type your email address  \"  style={styles.text} onChangeText={onEChange}/>\r\n        </View>\r\n        <View style={[styles.fields,{marginTop:10}]}>\r\n            <TextInput secureTextEntry={true} placeholder=\"password\" style={styles.text}  onChangeText={onPChange} />\r\n        </View>\r\n        <View style={styles.butbox}>\r\n            <View>\r\n                <TouchableOpacity style={styles.Button} onPress={setSend} >\r\n                    <Text style={styles.ButtonText}>   Login       </Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <View >\r\n                <TouchableOpacity style={[{backgroundColor:'transparent'}]} onPress={setSend} >\r\n                    <Text style={styles.ButtonText} onPress={() => props.navigation.navigate(\"ForgetPass\")} >Forgot Password</Text>\r\n                </TouchableOpacity>\r\n        </View>\r\n        </View>\r\n        </View>\r\n    </View>\r\n\r\n  )\r\n\r\n}\r\nexport default LoginPage;\r\n\r\n\r\n// const styles = StyleSheet.create({\r\n\r\n\r\n//   page:{\r\n//     alignItems: 'center',\r\n//     backgroundColor: '#f2ca30',\r\n//     justifyContent: 'center',\r\n//     height: '100%',\r\n//     width: '100%',\r\n//     flexDirection: 'column',\r\n//     flexDirection: 'row',\r\n//     // flexWrap: 'wrap',\r\n//     flex: 1\r\n//   },\r\n//   fields: {\r\n//       height: 35,\r\n//       width: '90.8%',\r\n//       padding:10,\r\n//       backgroundColor: 'white',\r\n//       textAlign:'center',\r\n//       borderRadius:30,\r\n//       marginTop: 10,\r\n//       marginLeft:10\r\n//   },\r\n//   Button : {\r\n//       // justifyContent:'center',\r\n//       // alignItems:'center',\r\n//       // borderColor:'#fff',\r\n//       backgroundColor:'#192570',\r\n//       // color :\"red\",\r\n//       // Color:'blue',\r\n//       // underlayColor:'#fff',\r\n//       borderRadius:25,\r\n//       height: 30,\r\n//       width: '100%',\r\n//       padding:0,\r\n//       textAlign:'center',\r\n//       marginTop:1,\r\n//       // Align:'left',\r\n//       // flex:0,\r\n//   },\r\n//   box: {\r\n//     marginTop: '42%',\r\n//     height: '45%',\r\n//     width: '65%',\r\n//     padding:10,\r\n//     // backgroundColor:\"green\"\r\n// },\r\n// ButtonText:{\r\n//   color:'white',\r\n//   // width:\"100%\"\r\n//   // fontSize:12,\r\n// },\r\n// butbox:{\r\n//   justifyContent:'space-between',\r\n\r\n//   // marginTop: '10%',\r\n//   height: '50%',\r\n//   width: '100%',\r\n//   padding:10,\r\n//   flexDirection: 'row',\r\n//   // backgroundColor:\"green\",\r\n//   // flexDirection: 'column',\r\n// }\r\n// });\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;AAIA,SAAQC,MAAR;;;;AAIA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAG;EAGxB,gBAA0BJ,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOK,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAAgCN,QAAQ,CAAC,EAAD,CAAxC;EAAA;EAAA,IAAOO,QAAP;EAAA,IAAiBC,WAAjB;;EACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,SAAD;IAAA,OAAeJ,QAAQ,CAACI,SAAD,CAAvB;EAAA,CAAlB;;EACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACD,SAAD;IAAA,OAAeF,WAAW,CAACE,SAAD,CAA1B;EAAA,CAAlB;;EACA,IAAME,QAAQ,GAAG,GAAjB;;EACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;IACpBZ,KAAK,CAAC;MACJa,MAAM,EAAE,MADJ;MAEJC,GAAG,EAAE,mCAFD;MAGJC,OAAO,EAAE;QAEL,iBAAkB;MAFb,CAHL;MAQJC,IAAI,EAAE;QACJZ,KAAK,EAAEA,KADH;QAEJE,QAAQ,EAAEA;MAFN;IARF,CAAD,CAAL,CAeGW,IAfH,CAeQ,UAACC,QAAD,EAAc;MAAC,IAAGA,QAAQ,CAACC,MAAT,IAAkB,KAArB,EAA2B;QAChDhB,KAAK,CAACiB,UAAN,CAAiBC,QAAjB,CAA0B,aAA1B;QACAC,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACC,MAArB;MACC;IAAC,CAlBJ,EAqBGK,KArBH,CAqBS,UAACC,KAAD;MAAA,OAAWH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAAX;IAAA,CArBT;EAuBD,CAxBD;;EAyBA,OACE,KAAC,IAAD;IAAM,KAAK,EAAExB,MAAM,CAACyB,IAApB;IAAA,UACE,MAAC,IAAD;MAAM,KAAK,EAAEzB,MAAM,CAAC0B,GAApB;MAAA,WACE,KAAC,IAAD;QAAA,UACI,KAAC,KAAD;UAAO,MAAM,EAAEC,OAAO,4BAAtB;UAAoD,KAAK,EAAE3B,MAAM,CAAC4B,IAAlE;UACM,UAAU,EAAE;QADlB;MADJ,EADF,EAKE,KAAC,IAAD;QAAM,KAAK,EAAE5B,MAAM,CAAC6B,MAApB;QAAA,UACI,KAAC,SAAD;UAAW,WAAW,EAAC,2BAAvB;UAAoD,KAAK,EAAE7B,MAAM,CAAC8B,IAAlE;UAAwE,YAAY,EAAEvB;QAAtF;MADJ,EALF,EAQE,KAAC,IAAD;QAAM,KAAK,EAAE,CAACP,MAAM,CAAC6B,MAAR,EAAe;UAACE,SAAS,EAAC;QAAX,CAAf,CAAb;QAAA,UACI,KAAC,SAAD;UAAW,eAAe,EAAE,IAA5B;UAAkC,WAAW,EAAC,UAA9C;UAAyD,KAAK,EAAE/B,MAAM,CAAC8B,IAAvE;UAA8E,YAAY,EAAErB;QAA5F;MADJ,EARF,EAWE,MAAC,IAAD;QAAM,KAAK,EAAET,MAAM,CAACgC,MAApB;QAAA,WACI,KAAC,IAAD;UAAA,UACI,KAAC,gBAAD;YAAkB,KAAK,EAAEhC,MAAM,CAACiC,MAAhC;YAAwC,OAAO,EAAEtB,OAAjD;YAAA,UACI,KAAC,IAAD;cAAM,KAAK,EAAEX,MAAM,CAACkC,UAApB;cAAA;YAAA;UADJ;QADJ,EADJ,EAMI,KAAC,IAAD;UAAA,UACI,KAAC,gBAAD;YAAkB,KAAK,EAAE,CAAC;cAACC,eAAe,EAAC;YAAjB,CAAD,CAAzB;YAA4D,OAAO,EAAExB,OAArE;YAAA,UACI,KAAC,IAAD;cAAM,KAAK,EAAEX,MAAM,CAACkC,UAApB;cAAgC,OAAO,EAAE;gBAAA,OAAMhC,KAAK,CAACiB,UAAN,CAAiBC,QAAjB,CAA0B,YAA1B,CAAN;cAAA,CAAzC;cAAA;YAAA;UADJ;QADJ,EANJ;MAAA,EAXF;IAAA;EADF,EADF;AA8BD,CA/DD;;AAgEA,eAAenB,SAAf"},"metadata":{},"sourceType":"module"}